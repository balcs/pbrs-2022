% This script reads in Monte Carlo results generated by the most recent
% Monte Carlo error analysis and displays a statistical digest of these
% results. 
%
% Note: this was originally written to use 'prctile' from the Statistics
% Toolbox. GB is too cheap to buy this toolbox, so added a substitute
% function at the end of this file. 
%
% Written by Greg Balco, Berkeley Geochronology Center and
% Anna Rood, Imperial College
%
% Note: authorship, license, and disclaimers for use of this code are 
% in an accompanying README.md file that should have been distributed 
% with the code. Do not distribute this code without the README.md file. 


load ('latest_MCS_results.mat')

out.ttips=out.ttips/1000;

disp(' ')
disp (['t0 Median = ' num2str(median(out.t0s))])
disp (['t0 5th Percentile = ' num2str(prctile(out.t0s,5))])
disp (['t0 16th Percentile = ' num2str(prctile(out.t0s,16))])
disp (['t0 84th Percentile = ' num2str(prctile(out.t0s,84))])
disp (['t0 95th Percentile = ' num2str(prctile(out.t0s,95))])
disp('---')

disp (['ttip Median = ' num2str((median(out.ttips)))])
disp (['ttip 5th Percentile = ' num2str((prctile(out.ttips,5)))])
disp (['ttip 16th Percentile = ' num2str((prctile(out.ttips,16)))])
disp (['ttip 84th Percentile = ' num2str((prctile(out.ttips,84)))])
disp (['ttip 95th Percentile = ' num2str((prctile(out.ttips,95)))])
disp('---')

disp (['Median E0sp = ' num2str(median(out.E0sps))])
disp (['E0sp 5th Percentile = ' num2str(prctile(out.E0sps,5))])
disp (['E0sp 16th Percentile = ' num2str(prctile(out.E0sps,16))])
disp (['E0sp 84th Percentile = ' num2str(prctile(out.E0sps,84))])
disp (['E0sp 95th Percentile = ' num2str(prctile(out.E0sps,95))])
disp('---')

disp (['Median E0mu = ' num2str(median(out.E0mus))])
disp (['E0mu 5th Percentile = ' num2str(prctile(out.E0mus,5))])
disp (['E0mu 16th Percentile = ' num2str(prctile(out.E0mus,16))])
disp (['E0mu 84th Percentile = ' num2str(prctile(out.E0mus,84))])
disp (['E0mu 95th Percentile = ' num2str(prctile(out.E0mus,95))])
disp('---')

disp (['Median E1 = ' num2str(median(out.E1s))])
disp (['E1 5th Percentile = ' num2str(prctile(out.E1s,5))])
disp (['E1 16th Percentile = ' num2str(prctile(out.E1s,16))])
disp (['E1 84th Percentile = ' num2str(prctile(out.E1s,84))])
disp (['E1 95th Percentile = ' num2str(prctile(out.E1s,95))])

figure()
bins = linspace(0.98*min(out.ttips),1.02*max(out.ttips),20);
yyaxis left
histogram(out.ttips,bins,'FaceColor','[0 0.5 0.6]')
set(gca,'YColor','k')
ylabel('Frequency')
xlim manual
ax = gca;
ax.XRuler.Exponent = 0;
hold on

yyaxis right
p=cdfplot(out.ttips)
set(p,'Color','k','LineWidth',1)
xlabel('ttip (ka)')
ylabel('Cumulative Frequency')
token=strtok(out.description,':')
title([token])
ylabel('')
set(gca,'YColor','k')

plot([prctile(out.ttips,16),1.5*max(out.ttips)],[0.16,0.16],':ok')
plot([prctile(out.ttips,50),1.5*max(out.ttips)],[0.5,0.5],'--ok')
plot([prctile(out.ttips,84),1.5*max(out.ttips)],[0.84,0.84],':ok')
t16=annotation('textbox',[0.80, 0.19, 0.1, 0.1],'String',[sprintf('%.1f',((prctile(out.ttips,16)))) ' ka'])
t16.EdgeColor='none'
t50=annotation('textbox',[0.80, 0.47, 0.1, 0.1],'String',[sprintf('%.1f',((prctile(out.ttips,50)))) ' ka'])
t50.EdgeColor='none'
t84=annotation('textbox',[0.80, 0.75, 0.1, 0.1],'String',[sprintf('%.1f',((prctile(out.ttips,84)))) ' ka'])
t84.EdgeColor='none'
grid off
hold off

function out = prctile(d,level)

% This is just to get around having to use the Statistics Toolbox. 

x = (1:length(d)).*100/length(d);
y = sort(d);
out = interp1(x,y,level);

end

